name: 'publish'

on:
  push:
    branches:
      - master

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pguyot/arm-runner-action@v2.5.2
        with:
          base_image: raspios_lite_arm64:latest
          bind_mount_repository: true
          image_additional_mb: 10240
          optimize_image: false
          commands: |
            # Rust complains (rightly) that $HOME doesn't match eid home
            export HOME=/root
            # Workaround to CI worker being stuck on Updating crates.io index
            export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
            # Install setup prerequisites
            apt-get update -y --allow-releaseinfo-change
            apt-get upgrade -y
            apt-get autoremove -y
            apt-get install nodejs curl -y
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            . "$HOME/.cargo/env"
            curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash
            # Install build tools and tauri-cli requirements
            apt-get install -y libwebkit2gtk-4.0-dev build-essential wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
            cargo install tauri-cli
            # Install frontend dependencies
            npm install
            # Build the application
            cargo tauri build --target aarch64-unknown-linux-gnu
      - uses: pguyot/arm-runner-action@v2.5.2
        with:
          base_image: raspios_lite:latest
          bind_mount_repository: true
          image_additional_mb: 10240
          optimize_image: false
          commands: |
            # Rust complains (rightly) that $HOME doesn't match eid home
            export HOME=/root
            # Workaround to CI worker being stuck on Updating crates.io index
            export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
            # Install setup prerequisites
            apt-get update -y --allow-releaseinfo-change
            apt-get upgrade -y
            apt-get autoremove -y
            apt-get install nodejs curl -y
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            . "$HOME/.cargo/env"
            curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash
            # Install build tools and tauri-cli requirements
            apt-get install -y libwebkit2gtk-4.0-dev build-essential wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
            cargo install tauri-cli
            # Install frontend dependencies
            npm install
            # Build the application
            cargo tauri build --target armv7-unknown-linux-gnueabihf
            
      - name: list
        run: |
          ls ${{ github.workspace }}/target/release/bundle/deb/
          
      - name: Upload deb bundle
        uses: actions/upload-artifact@v3
        with:
          name: Debian Bundle
          path: ${{ github.workspace }}/target/release/bundle/deb/tauri_1.4_arm.deb

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'Amica v__VERSION__'
          releaseBody: |
            # Amica __VERSION__
            ## Download Notes
            * `_aarch64.dmg` is for **macOS M1**
            * `_aarch64.app.tar.gz` is for **macOS M1**
            * `_x64.dmg` is for **macOS x86**
            * `_x64.app.tar.gz` is for **macOS x86**
            * `.exe` is for **Windows**
            * `.msi` is for **Windows**
            * `.AppImage` is for any **Linux 64 bit**
            * `_arm.AppImage` is for any **Linux ARMv7**
            * `_aarch64.AppImage` is for any **Linux ARM64 (AArch64)**
            * * **Note**: Be sure to set this to executable to run it (`chmod +x`)
            * `.deb` is for Debian (or Ubuntu) distributions
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
